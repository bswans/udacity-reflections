What happens when you initialize a repository? Why do you need to do it?

	Initializing creates a repository. So you can save all your versions of a 
	project.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area is an intermediate step. The working directory is an actual 
	place and the repository is a hidden actual place. It allows you to double 
	check you have the correct file being committed before you do so.

How can you use the staging area to make sure you have one commit per logical
change?
	
	You can compare the staging area to your previous commit to see the changes.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	When you're trying out an experimental change that you want to be able to 
	work on without messing up your whole master branch. A separate branch would 
	give you a place to play around and make changes without worrying about messing
	everything up.

How do the diagrams help you visualize the branch structure?

	By allowing you to compare where you are in the branch to where other changes
	are happening.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	You get one branch combining all the changes. Because it shows that the changes
	from previous commits of the merged branch are still shown in the new combined 
	branch.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

	Pro of auto-merging: fast, effective. Con: Doesn't always work.
	Pro of always manual merges: know it will work correctly. Con: super time consuming.
